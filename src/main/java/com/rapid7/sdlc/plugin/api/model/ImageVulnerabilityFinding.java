package com.rapid7.sdlc.plugin.api.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

public class ImageVulnerabilityFinding {

  @JsonProperty("instances")
  private Integer instances = null;

  @JsonProperty("results")
  private List<ImageAssessmentResult> results = new ArrayList<>();

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    VULNERABLE("vulnerable"),
    
    INVULNERABLE("invulnerable"),
    
    UNKNOWN("unknown");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("vulnerability")
  private Vulnerability vulnerability = null;

  public ImageVulnerabilityFinding instances(Integer instances) {
    this.instances = instances;
    return this;
  }

  public Integer getInstances() {
    return instances;
  }

  public void setInstances(Integer instances) {
    this.instances = instances;
  }

  public ImageVulnerabilityFinding results(List<ImageAssessmentResult> results) {
    this.results = results;
    return this;
  }

  public ImageVulnerabilityFinding addResultsItem(ImageAssessmentResult resultsItem) {
    this.results.add(resultsItem);
    return this;
  }

  public List<ImageAssessmentResult> getResults() {
    return results;
  }

  public void setResults(List<ImageAssessmentResult> results) {
    this.results = results;
  }

  public ImageVulnerabilityFinding status(StatusEnum status) {
    this.status = status;
    return this;
  }

  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ImageVulnerabilityFinding vulnerability(Vulnerability vulnerability) {
    this.vulnerability = vulnerability;
    return this;
  }

  public Vulnerability getVulnerability() {
    return vulnerability;
  }

  public void setVulnerability(Vulnerability vulnerability) {
    this.vulnerability = vulnerability;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    else if (!(obj instanceof ImageVulnerabilityFinding))
      return false;
    else {
      ImageVulnerabilityFinding imageVulnerabilityFinding = (ImageVulnerabilityFinding) obj;
      return Objects.equals(this.instances, imageVulnerabilityFinding.instances)
          && Objects.equals(this.results, imageVulnerabilityFinding.results)
          && Objects.equals(this.status, imageVulnerabilityFinding.status)
          && Objects.equals(this.vulnerability, imageVulnerabilityFinding.vulnerability);
    }
  }

  @Override
  public int hashCode() {
    return Objects.hash(instances, results, status, vulnerability);
  }

  @Override
  public String toString() {
    return new StringJoiner(", ", ImageVulnerabilityFinding.class.getSimpleName() + "[", "]")
        .add("instances=" + instances)
        .add("results=" + results)
        .add("status=" + status)
        .add("vulnerability=" + vulnerability)
        .toString();
  }
}
