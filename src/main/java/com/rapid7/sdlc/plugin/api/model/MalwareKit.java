package com.rapid7.sdlc.plugin.api.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Objects;
import java.util.StringJoiner;

public class MalwareKit {

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Gets or Sets popularity
   */
  public enum PopularityEnum {
    RARE("rare"),
    
    UNCOMMON("uncommon"),
    
    OCCASIONAL("occasional"),
    
    COMMON("common"),
    
    POPULAR("popular"),
    
    FAVORED("favored"),
    
    UNDEFINED("undefined");

    private String value;

    PopularityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PopularityEnum fromValue(String text) {
      for (PopularityEnum b : PopularityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("popularity")
  private PopularityEnum popularity = null;

  public MalwareKit description(String description) {
    this.description = description;
    return this;
  }

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public MalwareKit name(String name) {
    this.name = name;
    return this;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MalwareKit popularity(PopularityEnum popularity) {
    this.popularity = popularity;
    return this;
  }

  public PopularityEnum getPopularity() {
    return popularity;
  }

  public void setPopularity(PopularityEnum popularity) {
    this.popularity = popularity;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    else if (!(obj instanceof MalwareKit))
      return false;
    else {
      MalwareKit malwareKit = (MalwareKit) obj;
      return Objects.equals(this.description, malwareKit.description)
          && Objects.equals(this.name, malwareKit.name)
          && Objects.equals(this.popularity, malwareKit.popularity);
    }
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, popularity);
  }

  @Override
  public String toString() {
    return new StringJoiner(", ", MalwareKit.class.getSimpleName() + "[", "]")
        .add("description=" + description)
        .add("name=" + name)
        .add("popularity=" + popularity)
        .toString();
  }
}
