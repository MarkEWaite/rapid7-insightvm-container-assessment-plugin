package com.rapid7.sdlc.plugin.api.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Objects;
import java.util.StringJoiner;

public class ImageVulnerabilityCount {

  @JsonProperty("instances")
  private Integer instances = null;

  @JsonProperty("severity")
  private ImageVulnerabilitySeverityCount severity = null;

  @JsonProperty("total")
  private Integer total = null;

  public ImageVulnerabilityCount instances(Integer instances) {
    this.instances = instances;
    return this;
  }

  public Integer getInstances() {
    return instances;
  }

  public void setInstances(Integer instances) {
    this.instances = instances;
  }

  public ImageVulnerabilityCount severity(ImageVulnerabilitySeverityCount severity) {
    this.severity = severity;
    return this;
  }

  public ImageVulnerabilitySeverityCount getSeverity() {
    return severity;
  }

  public void setSeverity(ImageVulnerabilitySeverityCount severity) {
    this.severity = severity;
  }

  public ImageVulnerabilityCount total(Integer total) {
    this.total = total;
    return this;
  }

  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    else if (!(obj instanceof ImageVulnerabilityCount))
      return false;
    else {
      ImageVulnerabilityCount imageVulnerabilityCount = (ImageVulnerabilityCount) obj;
      return Objects.equals(this.instances, imageVulnerabilityCount.instances)
          && Objects.equals(this.severity, imageVulnerabilityCount.severity)
          && Objects.equals(this.total, imageVulnerabilityCount.total);
    }
  }

  @Override
  public int hashCode() {
    return Objects.hash(instances, severity, total);
  }

  @Override
  public String toString() {
    return new StringJoiner(", ", ImageVulnerabilityCount.class.getSimpleName() + "[", "]")
        .add("instances=" + instances)
        .add("severity=" + severity)
        .add("total=" + total)
        .toString();
  }
}
